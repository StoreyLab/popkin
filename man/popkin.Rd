% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/popkin.R
\name{popkin}
\alias{popkin}
\title{Estimate kinship from a genotype matrix and subpopulation assignments}
\usage{
popkin(X, subpops, m = NA, lociOnCols = FALSE, memLim = NA,
  verbose = FALSE)
}
\arguments{
\item{X}{Genotype matrix, class BEDMatrix object, or a function that returns the genotypes of all individuals at successive loci each time it is called, and NULL when no loci are left.}

\item{subpops}{The length-\eqn{n} vector of subpopulation assignments for each individual.}

\item{m}{Number of loci (optional, may truncate input when X is a function; ignored when X is a matrix or BEDMatrix object)}

\item{lociOnCols}{If true, X has loci on columns and individuals on rows; if false, loci are on rows and individuals on columns. Has no effect if X is a function.  If X is a BEDMatrix object, lociOnCols=TRUE is set automatically.}

\item{memLim}{Memory limit in GB used to calculate the "chunk size" (numbers of SNPs). Note memory usage is somewhat underestimated and is not controlled strictly.  Default is 2GB, except in linux it is the free memory in the system times 0.7.}

\item{verbose}{If true, prints messages to indicate which step is being performed.}
}
\value{
The estimated \eqn{n \times n} kinship matrix.
}
\description{
Given the biallelic genotypes of \eqn{n} individuals, this function returns the \eqn{n}-by-\eqn{n} kinship matrix \eqn{\Phi} such that the kinship estimate between the most distant subpopulations is zero on average.
The subpopulation labels
}
\details{
The matrix X (or the vectors returned by the function X) must have values only in c(0,1,2,NA), encoded to count the number of reference alleles at the locus, or NA for missing data.

\code{popkin} is a wrapper function that applies \code{getA}, \code{minAvgSubpops}, and \code{getKinshipFromA}.
}
\examples{
\dontrun{
## This example assumes input is in BED format and is loaded using BEDMatrix
## "file" is path to BED file (excluding .bed extension)
library(BEDMatrix)
X <- BEDMatrix(file) # load genotype matrix object
Phi <- popkin(X, subpops) # calculate kinship from genotypes and subpopulation labels "subpops"
}

}
