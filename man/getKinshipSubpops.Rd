% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getKinshipSubpops.R
\name{getKinshipSubpops}
\alias{getKinshipSubpops}
\title{Estimate kinship from a genotype matrix and subpopulation assignments}
\usage{
getKinshipSubpops(X, subpops, m = NA, lociOnCols = FALSE, lowMem = FALSE,
  verbose = FALSE)
}
\arguments{
\item{X}{Genotype matrix, class BEDMatrix object, or a function that returns the genotypes of all individuals at successive loci each time it is called, and NULL when no loci are left.}

\item{subpops}{The length-\eqn{n} vector of subpopulation assignments for each individual.}

\item{m}{Number of loci (optional, may truncate input when X is a function; ignored when X is a matrix or BEDMatrix object)}

\item{lociOnCols}{If true, X has loci on columns and individuals on rows; if false, loci are on rows and individuals on columns. Has no effect if X is a function.  If X is a BEDMatrix object, lociOnCols=TRUE is set automatically.}

\item{lowMem}{If true, code that runs through each SNP is used, which uses very low memory but is slower. If false, code that uses matrix algebra is used, which uses much more memory but is also faster.}

\item{verbose}{If true, prints messages to indicate which step is being performed.}
}
\value{
The estimated \eqn{n \times n} kinship matrix, with a minimum expected value of zero.
}
\description{
\code{getKinshipSubpops} is a wrapper function that applies \code{getA}, \code{getAEminSubpops}, and \code{getKinshipFromA}.
}
\examples{
\dontrun{Phi <- getKinshipSubpops(X, subpops)}

}
